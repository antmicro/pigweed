# Copyright 2021 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
#

# Improve debugability by printing all arguments for failing commands.
common --verbose_failures

# Standard flags required for all Pigweed projects.
import %workspace%/pw_build/pigweed.bazelrc

# Silence all C/C++ warnings in external code.
#
# Note that this will not silence warnings from external headers #include'd in
# first-party code.
common --per_file_copt=external/.*@-w
common --host_per_file_copt=external/.*@-w

# Picotool needs to build with exceptions and RTTI enabled.
common --per_file_copt=external.*picotool.*@-fexceptions,-frtti
common --host_per_file_copt=external.*picotool.*@-fexceptions,-frtti

# Don't automatically create __init__.py files.
#
# This prevents spurious package name collisions at import time, and should be
# the default (https://github.com/bazelbuild/bazel/issues/7386). It's
# particularly helpful for Pigweed, because we have many potential package name
# collisions due to a profusion of stuttering paths like
# pw_transfer/py/pw_transfer.
common --incompatible_default_to_explicit_init_py

# Required for new toolchain resolution API.
build --incompatible_enable_cc_toolchain_resolution

# Don't propagate flags or defines to the exec config. This will become the
# default one day (https://github.com/bazelbuild/bazel/issues/22457) and will
# improve cache hit rates between builds targeting different platforms.
common --experimental_exclude_defines_from_exec_config
common --experimental_exclude_starlark_flags_from_exec_config

# Default to C++17 to ensure compatibility.
common --//pw_toolchain/cc:cxx_standard=17
common:cxx20 --//pw_toolchain/cc:cxx_standard=20

# Also exclude integration tests from the default build. The test_tag_filters
# flag doesn't accumulate (https://github.com/bazelbuild/bazel/issues/7322): we
# have to specify it only once, setting all the exclusions in a comma-separated
# list.
test --test_tag_filters=-integration

# Required for combined code coverage reports.
coverage --experimental_generate_llvm_lcov
coverage --combined_report=lcov

# Suppress the DEBUG: log messages from bazel. We get lots of spammy DEBUG:
# messages from our third-party dependencies.
build --ui_event_filters=-debug

# Workaround for https://github.com/bazelbuild/rules_jvm_external/issues/445.
build --java_language_version=11
build --tool_java_language_version=11
build --java_runtime_version=remotejdk_11
build --repo_env=JAVA_HOME=../bazel_tools/jdk

# Silence compiler warnings from external repositories.
#
# TODO: https://pwbug.dev/347317581 - This is supported by Bazel's default C++
# toolchain, but not yet by Pigweed's own toolchains.
build --features=external_include_paths

# Turn on internal warnings for upstream Pigweed. DO NOT enable in downstream
# projects to allow for warnings to be added in the future without breaking
# downstream.
#
build --features=internal_strict_warnings

# This feature can't be enabled until __unordtf2 and __letf2 are implemented by
# compiler-rt. See https://reviews.llvm.org/D53608.
# build --features=fully_static_link

build --@freertos//:freertos_config=//third_party/freertos:freertos_config
build --@mbedtls//:mbedtls_config=//third_party/mbedtls:default_config

common:asan --//pw_toolchain/host_clang:asan
# TODO: https://github.com/bazelbuild/bazel/issues/7322 - We need to repeat the
# -integration because the test_tag_filters flag does not
# accumulate.
test:asan --test_tag_filters=-integration,-noasan

# Define the --config=asan-libfuzzer configuration.
build:asan-libfuzzer \
    --@rules_fuzzing//fuzzing:cc_engine=@rules_fuzzing//fuzzing/engines:libfuzzer
build:asan-libfuzzer \
    --@rules_fuzzing//fuzzing:cc_engine_instrumentation=libfuzzer
build:asan-libfuzzer --@rules_fuzzing//fuzzing:cc_engine_sanitizer=asan

# Include FuzzTest build configurations.
try-import %workspace%/third_party/fuzztest/fuzztest.bazelrc
build:fuzztest \
    --//pw_fuzzer:fuzztest_backend=@com_google_fuzztest//fuzztest:fuzztest_core
build:fuzztest \
    --@pigweed//pw_unit_test:main=@com_google_fuzztest//fuzztest:fuzztest_gtest_main

common:ubsan --//pw_toolchain/host_clang:ubsan
# TODO: https://github.com/bazelbuild/bazel/issues/7322 - We need to repeat the
# -integration because the test_tag_filters flag does not accumulate.
test:ubsan --test_tag_filters=-integration,-noubsan

common:tsan --//pw_toolchain/host_clang:tsan
# TODO: https://github.com/bazelbuild/bazel/issues/7322 - We need to repeat the
# -integration because the test_tag_filters flag does not accumulate.
test:tsan --test_tag_filters=-integration,-notsan

# Configure workspace status command to test pw_build_info git_build_info
# https://bazel.build/docs/user-manual#workspace-status-command
# TODO: b/348046338 - Add a Windows version of this command
build --workspace_status_command=pw_build_info/git_workspace_status_command.sh

# We use non-default labels for the STM32Cube repositories upstream (to reserve
# the option of building for more than one MCU family down the road), so need to
# override the three labels below.
common --//third_party/stm32cube:hal_driver=@stm32f4xx_hal_driver//:hal_driver
common --@stm32f4xx_hal_driver//:cmsis_device=@cmsis_device_f4//:cmsis_device
common --@stm32f4xx_hal_driver//:cmsis_init=@cmsis_device_f4//:default_cmsis_init
common --@cmsis_device_f4//:cmsis_core=@cmsis_core

common --//pw_env_setup/py:pigweed_json=//:pigweed.json

build --//pw_function:config_override=//pw_function:upstream_default_config

# Config for all RP2xxx platforms.
#
# TODO: b/301334234 - Make the platform set the flags below.
# LINT.IfChange
build:rp2040 --platforms=@pigweed//targets/rp2040
build:rp2040 --//pw_assert:assert_backend=@pigweed//pw_assert_trap
build:rp2040 --//pw_assert:assert_backend_impl=@pigweed//pw_assert_trap:impl
build:rp2040 --//pw_assert:check_backend=@pigweed//pw_assert_trap
build:rp2040 --//pw_assert:check_backend_impl=@pigweed//pw_assert_trap:impl
build:rp2040 --//pw_cpu_exception:entry_backend=@pigweed//pw_cpu_exception_cortex_m:cpu_exception
build:rp2040 --//pw_cpu_exception:entry_backend_impl=@pigweed//pw_cpu_exception_cortex_m:cpu_exception_impl
build:rp2040 --//pw_cpu_exception:handler_backend=@pigweed//pw_cpu_exception:basic_handler
build:rp2040 --//pw_cpu_exception:support_backend=@pigweed//pw_cpu_exception_cortex_m:support
build:rp2040 --//pw_interrupt:backend=@pigweed//pw_interrupt_cortex_m:context
build:rp2040 --//pw_log:backend=@pigweed//pw_log_tokenized
build:rp2040 --//pw_log:backend_impl=@pigweed//pw_log_tokenized:impl
build:rp2040 --//pw_log_tokenized:handler_backend=@pigweed//pw_system:log_backend
build:rp2040 --//pw_sync:binary_semaphore_backend=//pw_sync_freertos:binary_semaphore
build:rp2040 --//pw_sync:counting_semaphore_backend=@pigweed//pw_sync_freertos:counting_semaphore
build:rp2040 --//pw_sync:interrupt_spin_lock_backend=//pw_sync_freertos:interrupt_spin_lock
build:rp2040 --//pw_sync:mutex_backend=//pw_sync_freertos:mutex
build:rp2040 --//pw_sync:thread_notification_backend=//pw_sync_freertos:thread_notification
build:rp2040 --//pw_sync:timed_thread_notification_backend=//pw_sync_freertos:timed_thread_notification
build:rp2040 --//pw_sys_io:backend=//pw_sys_io_rp2040
build:rp2040 --//pw_system:extra_platform_libs=@pigweed//targets/rp2040:extra_platform_libs
build:rp2040 --//pw_system:device_handler_backend=@pigweed//targets/rp2040:device_handler
build:rp2040 --//pw_thread:id_backend=@pigweed//pw_thread_freertos:id
build:rp2040 --//pw_thread:iteration_backend=@pigweed//pw_thread_freertos:thread_iteration
build:rp2040 --//pw_thread:sleep_backend=@pigweed//pw_thread_freertos:sleep
build:rp2040 --//pw_thread:test_thread_context_backend=@pigweed//pw_thread_freertos:test_thread_context
build:rp2040 --//pw_thread:thread_backend=@pigweed//pw_thread_freertos:thread
build:rp2040 --//pw_thread:yield_backend=@pigweed//pw_thread_freertos:yield
build:rp2040 --//pw_toolchain:cortex-m_toolchain_kind=clang
build:rp2040 --//pw_trace:backend=@pigweed//pw_trace_tokenized:pw_trace_tokenized
build:rp2040 --//pw_unit_test:backend=//pw_unit_test:light
build:rp2040 --//pw_unit_test:main=//targets/rp2040:unit_test_app
build:rp2040 --//pw_build:default_module_config=//targets/rp2040:pigweed_module_config
build:rp2040 --@freertos//:freertos_config=@pigweed//targets/rp2040:freertos_config
build:rp2040 --@pico-sdk//bazel/config:PICO_STDIO_USB=True
build:rp2040 --@pico-sdk//bazel/config:PICO_STDIO_UART=True
build:rp2040 --@pico-sdk//bazel/config:PICO_CLIB=llvm_libc
build:rp2040 --@pico-sdk//bazel/config:PICO_TOOLCHAIN="clang"
test:rp2040 --run_under=//targets/rp2040/py:unit_test_client
# LINT.ThenChange(//targets/rp2040/transition.bzl)

# RP2350 is the same but with a different --platforms setting.
build:rp2350 --config=rp2040
build:rp2350 --platforms=@pigweed//targets/rp2040:rp2350

# Config for the stm32f429i_disc1 baremetal platform.
#
# TODO: b/301334234 - Make the platform set the flags below.
build:stm32f429i_baremetal --platforms=//targets/stm32f429i_disc1:platform
build:stm32f429i_baremetal --//pw_assert:check_backend=@pigweed//pw_assert_basic
build:stm32f429i_baremetal --//pw_assert:check_backend_impl=@pigweed//pw_assert_basic:impl
build:stm32f429i_baremetal --//pw_boot:backend=@pigweed//pw_boot_cortex_m
build:stm32f429i_baremetal --//pw_log:backend=@pigweed//pw_log_basic
build:stm32f429i_baremetal --//pw_log:backend_impl=@pigweed//pw_log_basic:impl
build:stm32f429i_baremetal --//pw_malloc:backend=@pigweed//pw_malloc:bucket_block_allocator
build:stm32f429i_baremetal --//pw_system:extra_platform_libs=@pigweed//targets/stm32f429i_disc1:extra_platform_libs
build:stm32f429i_baremetal --//pw_sys_io:backend=//pw_sys_io_baremetal_stm32f429


# Config for the stm32f429i_disc1_stm32cube freertos platform.
#
# TODO: b/301334234 - Make the platform set the flags below.
build:stm32f429i_freertos --platforms=//targets/stm32f429i_disc1_stm32cube:platform
build:stm32f429i_freertos --copt="-DSTM32CUBE_HEADER=\"stm32f4xx.h\""
build:stm32f429i_freertos --copt="-DSTM32F429xx"
build:stm32f429i_freertos --@stm32f4xx_hal_driver//:hal_config=//targets/stm32f429i_disc1_stm32cube:hal_config
build:stm32f429i_freertos --//pw_assert:check_backend=@pigweed//pw_assert_basic
build:stm32f429i_freertos --//pw_assert:check_backend_impl=@pigweed//pw_assert_basic:impl
build:stm32f429i_freertos --//pw_boot:backend=@pigweed//pw_boot_cortex_m
build:stm32f429i_freertos --//pw_log:backend=@pigweed//pw_log_tokenized
build:stm32f429i_freertos --//pw_log:backend_impl=@pigweed//pw_log_tokenized:impl
build:stm32f429i_freertos --//pw_log_tokenized:handler_backend=@pigweed//pw_system:log_backend
build:stm32f429i_freertos --//pw_malloc:backend=@pigweed//pw_malloc:bucket_block_allocator
build:stm32f429i_freertos --//pw_sync:binary_semaphore_backend=//pw_sync_freertos:binary_semaphore
build:stm32f429i_freertos --//pw_sync:interrupt_spin_lock_backend=//pw_sync_freertos:interrupt_spin_lock
build:stm32f429i_freertos --//pw_sync:mutex_backend=//pw_sync_freertos:mutex
build:stm32f429i_freertos --//pw_sync:thread_notification_backend=//pw_sync_freertos:thread_notification
build:stm32f429i_freertos --//pw_sync:timed_thread_notification_backend=//pw_sync_freertos:timed_thread_notification
build:stm32f429i_freertos --//pw_thread:id_backend=@pigweed//pw_thread_freertos:id
build:stm32f429i_freertos --//pw_thread:iteration_backend=@pigweed//pw_thread_freertos:thread_iteration
build:stm32f429i_freertos --//pw_thread:sleep_backend=@pigweed//pw_thread_freertos:sleep
build:stm32f429i_freertos --//pw_thread:thread_backend=@pigweed//pw_thread_freertos:thread
build:stm32f429i_freertos --//pw_unit_test:main=//targets/stm32f429i_disc1_stm32cube:unit_test_app
build:stm32f429i_freertos --//pw_system:extra_platform_libs=@pigweed//targets/stm32f429i_disc1_stm32cube:extra_platform_libs
build:stm32f429i_freertos --//pw_sys_io:backend=//pw_sys_io_stm32cube

# Config for the lm3s6965evb platform, used to build pw_rust/examples.
#
# TODO: b/301334234 - Make the platform set the flags below.
build:lm3s6965evb --platforms=//pw_build/platforms:lm3s6965evb
build:lm3s6965evb --//pw_log/rust:pw_log_backend=//pw_rust/examples/tokenized_logging:pw_log_backend
build:lm3s6965evb --//pw_sys_io:backend=//pw_sys_io_baremetal_lm3s6965evb

# Config for the microbit platform, used to build pw_rust/examples.
#
# TODO: b/301334234 - Make the platform set the flags below.
build:microbit --platforms=//pw_build/platforms:lm3s6965evb
build:microbit --//pw_log/rust:pw_log_backend=//pw_rust/examples/tokenized_logging:pw_log_backend
build:microbit --//pw_sys_io:backend=//pw_sys_io_baremetal_lm3s6965evb

# Config for the mimxrt595_evk_freertos freertos platform.
build:mimxrt595_evk_freertos --platforms=@pigweed//targets/mimxrt595_evk_freertos:platform
build:mimxrt595_evk_freertos --@pigweed//pw_assert:assert_backend=@pigweed//pw_assert_basic
build:mimxrt595_evk_freertos --@pigweed//pw_assert:assert_backend_impl=@pigweed//pw_assert_basic:impl
build:mimxrt595_evk_freertos --@pigweed//pw_assert:check_backend=@pigweed//pw_assert_basic
build:mimxrt595_evk_freertos --@pigweed//pw_assert:check_backend_impl=@pigweed//pw_assert_basic:impl
build:mimxrt595_evk_freertos --@freertos//:freertos_config=@pigweed//targets/mimxrt595_evk_freertos:freertos_config
build:mimxrt595_evk_freertos --@pigweed//pw_log:backend=@pigweed//pw_log_basic
build:mimxrt595_evk_freertos --@pigweed//pw_log:backend_impl=@pigweed//pw_log_basic:impl
build:mimxrt595_evk_freertos --@pigweed//pw_sys_io:backend=@pigweed//pw_sys_io_mcuxpresso
build:mimxrt595_evk_freertos --@pigweed//pw_sync:binary_semaphore_backend=@pigweed//pw_sync_freertos:binary_semaphore
build:mimxrt595_evk_freertos --@pigweed//pw_sync:counting_semaphore_backend=@pigweed//pw_sync_freertos:counting_semaphore
build:mimxrt595_evk_freertos --@pigweed//pw_sync:interrupt_spin_lock_backend=@pigweed//pw_sync_freertos:interrupt_spin_lock
build:mimxrt595_evk_freertos --@pigweed//pw_sync:mutex_backend=@pigweed//pw_sync_freertos:mutex
build:mimxrt595_evk_freertos --@pigweed//pw_sync:thread_notification_backend=@pigweed//pw_sync_freertos:thread_notification
build:mimxrt595_evk_freertos --@pigweed//pw_sync:timed_thread_notification_backend=@pigweed//pw_sync_freertos:timed_thread_notification
build:mimxrt595_evk_freertos --@pigweed//pw_thread:id_backend=@pigweed//pw_thread_freertos:id
build:mimxrt595_evk_freertos --@pigweed//pw_thread:iteration_backend=@pigweed//pw_thread_freertos:thread_iteration
build:mimxrt595_evk_freertos --@pigweed//pw_thread:sleep_backend=@pigweed//pw_thread_freertos:sleep
build:mimxrt595_evk_freertos --@pigweed//pw_thread:test_thread_context_backend=@pigweed//pw_thread_freertos:test_thread_context
build:mimxrt595_evk_freertos --@pigweed//pw_thread:thread_backend=@pigweed//pw_thread_freertos:thread
build:mimxrt595_evk_freertos --@pigweed//pw_thread:yield_backend=@pigweed//pw_thread_freertos:yield
build:mimxrt595_evk_freertos --@pigweed//pw_boot:backend=@pigweed//pw_boot_cortex_m:armv8m
build:mimxrt595_evk_freertos --@pigweed//pw_system:extra_platform_libs=@pigweed//targets/mimxrt595_evk_freertos:extra_platform_libs
build:mimxrt595_evk_freertos --@pigweed//pw_chrono:system_clock_backend=@pigweed//pw_chrono_freertos:system_clock
build:mimxrt595_evk_freertos --@pigweed//pw_chrono:system_timer_backend=@pigweed//pw_chrono_freertos:system_timer

# For some platforms i.e. google/oss-fuzz we need to use the system provided
# rather than the hermetic toolchains. This allows oss-fuzz to override the
# build with specialised compilers that are tightly coupled to the fuzzing
# runtimes.
# Detect toolchains
common:non_hermetic --repo_env=BAZEL_DO_NOT_DETECT_CPP_TOOLCHAIN=0
common:non_hermetic --extra_toolchains=@local_config_cc_toolchains//...

# Use the remote cache. This will only work for users who have permission to access it.
common:remote_cache --remote_cache=grpcs://remotebuildexecution.googleapis.com
common:remote_cache --google_default_credentials=true
common:remote_cache --remote_instance_name=projects/pigweed-rbe-open/instances/default-instance
common:remote_cache --remote_upload_local_results=false

# Specifies desired output mode for running tests.
# Valid values are
#   'summary' to output only test status summary
#   'errors' to also print test logs for failed tests
#   'all' to print logs for all tests
#   'streamed' to output logs for all tests in real time
#     (this will force tests to be executed locally one at a time regardless
#     of --test_strategy value).
test --test_output=errors

# User bazelrc file; see
# https://bazel.build/configure/best-practices#bazelrc-file
#
# Note: this should be at the bottom of the file, so that user-specified
# options override anything in this file
# (https://bazel.build/run/bazelrc#imports)
try-import %workspace%/user.bazelrc
