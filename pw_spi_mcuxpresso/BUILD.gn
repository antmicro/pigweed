# Copyright 2023 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

import("//build_overrides/pigweed.gni")

import("$dir_pw_build/target_types.gni")
import("$dir_pw_docgen/docs.gni")
import("$dir_pw_third_party/mcuxpresso/mcuxpresso.gni")
import("$dir_pw_unit_test/test.gni")

config("default_config") {
  include_dirs = [ "public" ]
}

group("pw_spi_mcuxpresso") {
  deps = [
    ":flexio_spi",
    ":spi",
  ]
}

if (pw_third_party_mcuxpresso_SDK != "") {
  pw_source_set("spi") {
    public_configs = [ ":default_config" ]
    public = [ "public/pw_spi_mcuxpresso/spi.h" ]
    public_deps = [
      "$dir_pw_spi:chip_selector",
      "$dir_pw_spi:initiator",
      "$dir_pw_status",
      "$dir_pw_sync:binary_semaphore",
      "$dir_pw_sync:lock_annotations",
      "$dir_pw_sync:mutex",
      "$pw_third_party_mcuxpresso_SDK",
    ]
    deps = [
      "$dir_pw_assert",
      "$dir_pw_chrono:system_clock",
      "$dir_pw_log",
    ]
    sources = [ "spi.cc" ]
  }

  pw_source_set("flexio_spi") {
    public_configs = [ ":default_config" ]
    public = [ "public/pw_spi_mcuxpresso/flexio_spi.h" ]
    public_deps = [
      "$dir_pw_digital_io",
      "$dir_pw_spi:chip_selector",
      "$dir_pw_spi:initiator",
      "$dir_pw_status",
      "$dir_pw_sync:binary_semaphore",
      "$dir_pw_sync:lock_annotations",
      "$dir_pw_sync:mutex",
      "$pw_third_party_mcuxpresso_SDK",
    ]
    deps = [
      "$dir_pw_chrono:system_clock",
      "$dir_pw_log",
    ]
    sources = [ "flexio_spi.cc" ]
  }

  pw_source_set("responder") {
    public_configs = [ ":default_config" ]
    public = [ "public/pw_spi_mcuxpresso/responder.h" ]
    public_deps = [
      "$dir_pw_digital_io",
      "$dir_pw_spi:initiator",
      "$dir_pw_spi:responder",
      "$dir_pw_status",
      "$dir_pw_sync:binary_semaphore",
      "$dir_pw_sync:lock_annotations",
      "$dir_pw_sync:mutex",
      "$pw_third_party_mcuxpresso_SDK",
    ]
    deps = [
      "$dir_pw_chrono:system_clock",
      "$dir_pw_log",
    ]
    sources = [ "responder.cc" ]
  }

  pw_test("spi_test") {
    enable_if =
        pw_third_party_mcuxpresso_SDK ==
        "$dir_pigweed/targets/mimxrt595_evk_freertos:sdk" &&
        (pw_toolchain_SCOPE.name == "mimxrt595_evk_freertos_debug" ||
         pw_toolchain_SCOPE.name == "mimxrt595_evk_freertos_size_optimized" ||
         pw_toolchain_SCOPE.name == "mimxrt595_evk_freertos_speed_optimized")
    sources = [ "spi_test.cc" ]
    deps = [
      ":spi",
      "$dir_pw_spi:device",
      "$dir_pigweed/targets/mimxrt595_evk_freertos:sdk",
    ]
  }

  pw_test("flexio_spi_test") {
    enable_if =
        pw_third_party_mcuxpresso_SDK ==
        "$dir_pigweed/targets/mimxrt595_evk_freertos:sdk" &&
        (pw_toolchain_SCOPE.name == "mimxrt595_evk_freertos_debug" ||
         pw_toolchain_SCOPE.name == "mimxrt595_evk_freertos_size_optimized" ||
         pw_toolchain_SCOPE.name == "mimxrt595_evk_freertos_speed_optimized")
    sources = [ "flexio_spi_test.cc" ]
    deps = [
      ":flexio_spi",
      "$dir_pigweed/targets/mimxrt595_evk_freertos:sdk",
    ]
  }

  pw_test_group("tests") {
    tests = [
      ":spi_test",
      ":flexio_spi_test",
    ]
  }
} else {
  pw_test_group("tests") {
    tests = []
  }
}

pw_doc_group("docs") {
  sources = [ "docs.rst" ]
}
