# Copyright 2023 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

import("//build_overrides/pigweed.gni")

import("$dir_pw_build/target_types.gni")
import("$dir_pw_docgen/docs.gni")
import("$dir_pw_third_party/mcuxpresso/mcuxpresso.gni")
import("$dir_pw_unit_test/test.gni")

config("default_config") {
  include_dirs = [ "public" ]
}

if (pw_third_party_mcuxpresso_SDK != "") {
  pw_source_set("pw_stream_uart_mcuxpresso") {
    public_configs = [ ":default_config" ]
    public = [ "public/pw_stream_uart_mcuxpresso/stream.h" ]
    public_deps = [
      "$dir_pw_clock_tree",
      "$dir_pw_stream",
    ]
    deps = [ pw_third_party_mcuxpresso_SDK ]
    sources = [ "stream.cc" ]
  }

  pw_source_set("pw_stream_uart_dma_mcuxpresso") {
    public_configs = [ ":default_config" ]
    public = [ "public/pw_stream_uart_mcuxpresso/dma_stream.h" ]
    public_deps = [
      "$dir_pw_clock_tree",
      "$dir_pw_stream",
      "$dir_pw_sync:thread_notification",
    ]
    deps = [
      "$dir_pw_preprocessor",
      "$dir_pw_sync:interrupt_spin_lock",
      pw_third_party_mcuxpresso_SDK,
    ]
    sources = [ "dma_stream.cc" ]
  }

  pw_source_set("pw_stream_uart_interrupt_safe_writer_mcuxpresso") {
    public_configs = [ ":default_config" ]
    public = [ "public/pw_stream_uart_mcuxpresso/interrupt_safe_writer.h" ]
    public_deps = [
      "$dir_pw_clock_tree",
      "$dir_pw_status",
      "$dir_pw_stream",
    ]
    deps = [ pw_third_party_mcuxpresso_SDK ]
    sources = [ "interrupt_safe_writer.cc" ]
  }

  pw_test("stream_test") {
    enable_if =
        pw_third_party_mcuxpresso_SDK ==
        "$dir_pigweed/targets/mimxrt595_evk_freertos:sdk" &&
        (pw_toolchain_SCOPE.name == "mimxrt595_evk_freertos_debug" ||
         pw_toolchain_SCOPE.name == "mimxrt595_evk_freertos_size_optimized" ||
         pw_toolchain_SCOPE.name == "mimxrt595_evk_freertos_speed_optimized")
    sources = [ "stream_test.cc" ]
    deps = [
      ":pw_stream_uart_mcuxpresso",
      "$dir_pigweed/targets/mimxrt595_evk_freertos:sdk",
    ]
  }

  pw_test("stream_example") {
    enable_if =
        pw_third_party_mcuxpresso_SDK ==
        "$dir_pigweed/targets/mimxrt595_evk_freertos:sdk" &&
        (pw_toolchain_SCOPE.name == "mimxrt595_evk_freertos_debug" ||
         pw_toolchain_SCOPE.name == "mimxrt595_evk_freertos_size_optimized" ||
         pw_toolchain_SCOPE.name == "mimxrt595_evk_freertos_speed_optimized")
    sources = [ "stream_example.cc" ]
    deps = [
      ":pw_stream_uart_mcuxpresso",
      "$dir_pigweed/targets/mimxrt595_evk_freertos:sdk",
    ]
  }

  pw_test("dma_stream_example") {
    enable_if =
        pw_third_party_mcuxpresso_SDK ==
        "$dir_pigweed/targets/mimxrt595_evk_freertos:sdk" &&
        (pw_toolchain_SCOPE.name == "mimxrt595_evk_freertos_debug" ||
         pw_toolchain_SCOPE.name == "mimxrt595_evk_freertos_size_optimized" ||
         pw_toolchain_SCOPE.name == "mimxrt595_evk_freertos_speed_optimized")
    sources = [ "dma_stream_example.cc" ]
    deps = [
      ":pw_stream_uart_dma_mcuxpresso",
      "$dir_pigweed/targets/mimxrt595_evk_freertos:sdk",
    ]
  }

  pw_test("interrupt_safe_writer_example") {
    enable_if =
        pw_third_party_mcuxpresso_SDK ==
        "$dir_pigweed/targets/mimxrt595_evk_freertos:sdk" &&
        (pw_toolchain_SCOPE.name == "mimxrt595_evk_freertos_debug" ||
         pw_toolchain_SCOPE.name == "mimxrt595_evk_freertos_size_optimized" ||
         pw_toolchain_SCOPE.name == "mimxrt595_evk_freertos_speed_optimized")
    public_configs = [ "//pw_build:cpp20" ]
    sources = [ "interrupt_safe_writer_example.cc" ]
    deps = [
      ":pw_stream_uart_interrupt_safe_writer_mcuxpresso",
      "$dir_pigweed/targets/mimxrt595_evk_freertos:sdk",
    ]
  }

  pw_test_group("tests") {
    tests = [
      ":stream_test",
      ":stream_example",
      ":dma_stream_example",
      ":interrupt_safe_writer_example",
    ]
  }
} else {
  pw_test_group("tests") {
    tests = []
  }
}

pw_doc_group("docs") {
  inputs = [
    "stream_example.cc",
    "dma_stream_example.cc",
    "interrupt_safe_writer_example.cc",
  ]
  sources = [ "docs.rst" ]
}
